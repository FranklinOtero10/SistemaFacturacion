<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAB
        uwAAAbsBOuzj4gAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAQjSURBVHhe7dvJ
        axRBFAbwoOKCgnoQRNG/wAUUhIjLkHT3EEXwYEu6OwlJunpQwYOgB0FhUAiinjR4EQMuF6/iKeJBPYgL
        CP4HIi5BFJS4xBDje2GIk5ovMF31SuMkhx8k3/T0+6qGmcyWpvHx8b8m6Oxc6kXZwSBW1/1YPSEfySfy
        zE/UbT/K+uiyNGjvWYeu7wIMpYVhuNCP03O00G9kvA4/gkRdKoTdq9H5JMFQUrGjdzMt6KW2wHp9C5K0
        F51XCgwl0K0+n8qfpEWMaIvKa9RP0lY0QwIMJVDxfm0hNj55YWk5mmMLhraCSPlU+pe2CCterLrQLFsw
        tFHo7l5BhV/rCxDwgs69GM20AUMbdEvdAuVlJOommmkDhqaC9mw7LC6InieU0GxTMDTFf7tRaWGP0WxT
        MDRF5d5oZV0Y48cZNN8EDE20hT2rQFknvKS0EXUwAUMTrVFvMyrrghdnHupgAoYm6Ll+iMq6wC+oUAcT
        MDQRxFk7KusCz0IdTMDQxNwGzG3A3AbMbQAq68LM3IBInUBlXeBZqIMJGObldZXW06vAL6isCzyLZ6Iu
        ecEwL3qFdgUVdYlnoi55wTAvL06Po5Iu8UzUJS8Y5lWM022opEs8E3XJC4Z5FQrlBVRqWC/p0DDPRF3y
        gqEJuk/eA0Wd4FmogwkYmqBip/WiDp1GHUzA0ETlE6CvWlFx/CewNVKbUAcTMDTFH2Oh0pKCKN2HZpuC
        oam98eGVVHJULy1otBAeWYZmm4KhDSo5qJWWNIhm2oChDT/JDoHiMujcaKYNGNrgz/Sp7FhNeXtjLr4v
        AENbVPa+Vl7CfTTLFgxt8VdcqPB7bQE2hqRe/elgKKHyOcEPbSEmfnpRaQeaIQGGUrxI9YAF5ePgga8a
        DKUEkWqBi8pnDzq3FBhKEfq0+Co6txQYSqHyr7TFmBgql8vz0PklwFBCsaO0BSzGSLFD7UQzJMBQAj14
        3UWLMeTkOQCDoS267x8Ai7DiJWmMZtmCoQ3+6JoKu3h7bNjFJsAwL36Q4vspLf4aKC4su8GzpB4YYVgP
        LhDE6S4qdJmKva0t6hzNzC5zB5vNgOF0/ix64muw/2LR0+Eu/SabAcNqfEI/ynZPDEjUu6qhM1KlYz93
        rmczYMj89t41QZxd+B8WPZ2J7pG62NJ1aC1aI6sJKrd4H51A4pXcTDHCNyZ/hV9f75Rf+F9a6OA72pUb
        Bz054zVWr3nKBtBBAzVXajwD1Wue/CGI0v3g4IbEa63ZALrgqX5gA3s+ZQOCznQDOKihBbHa+mcD4uwU
        OqiReXF6dnIDKHDxNvYMlz6a2IC2tqOLKPhee0DDG2kOjy1pqjzNRQc0PH7Tlr/ZUUYXzhJn+P7/QAtn
        DS9SD3kDPugXzB7Z5yYvUefpF9H/8vxPjPhR1vcbH/wm5TNXOeMAAAAASUVORK5CYII=
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>